#!/bin/sh

command -v hyprctl >/dev/null 2>&1 || { echo >&2 "hyprctl was not found"; exit 1; }
command -v socat >/dev/null 2>&1 || { echo >&2 "socat was not found"; exit 1; }
command -v date >/dev/null 2>&1 || { echo >&2 "date was not found"; exit 1; }
command -v sed >/dev/null 2>&1 || { echo >&2 "sed was not found"; exit 1; }
command -v tr >/dev/null 2>&1 || { echo >&2 "tr was not found"; exit 1; }

unset status_dump
unset status_handle

status_dump(){
    t=$(LC_ALL=en_US.utf8 date +"%s-%3N")
    tmp_path=".hyprland_logger.tmp"
    res="$(hyprctl activewindow)"

    if [ "$res" = "Invalid" ]; then
        res=" title: Desktop
 pid: 00000
 class: Desktop"
    fi

    # title=$(echo "$res" | grep -E "*title" | sed 's/^[^:]*: //g') # Does not work if "title" is in title !
    # title=$(echo "$res" | jq -r '.title') # hyprctl activewindow -j
    # title=$(echo "$res" | awk -F': ' '/^[[:space:]]*title:/ {print $2}')
    # title=$(echo "$res" | sed -n 's/^[[:space:]]*title: //p')

    # Almost as fast, but stronger regex
    title=$(printf "%s" "$res" | sed -n 's/^[[:space:]]*title: //p' | sed 's/%/%%/g') # ;s/\\n/\\\\n/g')
    class=$(printf "%s" "$res" | sed -n 's/^[[:space:]]*class: //p')
    printf -v pid "%05d" "$(printf "%s" "$res" | sed -n 's/^[[:space:]]*pid: //p')" || printf -v pid "%05d" 0

    printf -v new "%s" "[$pid] [$class] $title"

    # echo "NEW : $new;"
    # echo "OLD : $(cat $tmp_path);"

    [ "$new" = "$(cat $tmp_path)" ] || printf "%s\n" "[$t] $new"
    printf "$new" > $tmp_path
}


status_handle() {
  case $1 in
    activewindow*) status_dump >> "$filename" ;;
  esac
}

filename="$(LC_ALL=en_US.utf8 date +"%d-%m-%Y_%Hh%Mm%S").wins"
echo -en "Starting at $(LC_ALL=en_US.utf8 date +"%a %b %d %T %Y")\n\n" > "$filename"

socat -U - UNIX-CONNECT:/tmp/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock | while read -r line; do status_handle "$line"; done
